@startuml system-tools

skinparam {
    monochrome false
    padding 2
}

' 参考
' https://qiita.com/irongineer/items/23fcd55830ae2de96ca8

'Icon : https://github.com/tupadr3/plantuml-icon-font-sprites

title System
header テストシーケンス
footer ページ %page% / %lastpage%

' GitHub
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.3.0
!includeurl ICONURL/common.puml
!includeurl ICONURL/devicons/github_badge.puml
!includeurl ICONURL/devicons/git.puml
!includeurl ICONURL/devicons/git_branch.puml
!includeurl ICONURL/devicons/git_pull_request.puml
!includeurl ICONURL/devicons/git_merge.puml
'ex. DEV_GITHUB_BADGE(github, GitHub) #White {

!includeurl ICONURL/font-awesome-5/github.puml
!includeurl ICONURL/font-awesome-5/slack.puml
'ex. FA5_SLACK(slack, Slack) #red {

!includeurl ICONURL/devicons/mysql.puml

' AWS
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v10.0/dist
!includeurl AWSPuml/AWSCommon.puml
!includeurl AWSPuml/General/Client.puml
!includeurl AWSPuml/GroupIcons/Cloudalt.puml
!includeurl AWSPuml/ApplicationIntegration/APIGateway.puml
!includeurl AWSPuml/Compute/Lambda.puml
!includeurl AWSPuml/Database/DynamoDB.puml
!includeurl AWSPuml/AWSSimplified.puml
'ex. Cloudalt(aws, AWS, AWS)

' 図
Cloudalt(aws, AWS, AWS) {
    APIGateway(apiGateway, "API Gateway", "API Gateway")
    Lambda(lambda, "Lambda", "Lambda")
    DynamoDB(dynamodb, "DynamoDB", "DynamoDB")
}

DEV_GITHUB_BADGE(github, GitHub) #White {
    component [CI/CD]Actions {
        () "Dependabot" #gray
        () "CodeQL" #gray
        () "release-drafter" #gray
        () "action-label-syncer" #gray
    }
    component Optimization {
        () "Packages" #gray
        () "Coplit" #gray
        () "Codspace" #gray
    }
    component Documentation\nIdeas {
        () "Discussions" #gray
        () "WIKI" #gray
        () "pages" #gray
    }
    component Task {
        () "issue" #gray
        () "projects" #gray
    }

    DEV_GIT_PULL_REQUEST(PullRequest, PullRequest) {
        DEV_GIT_BRANCH(gitBranchFeature, OAM- or issue-#\nbranch) #White
        DEV_GIT_BRANCH(gitBranchDevelop, develop\nbranch) #White
        DEV_GIT_BRANCH(gitBranchMain, main\nbranch) #White
        DEV_GIT_PULL_REQUEST(gitPRDevelop, Pull Request\nRequire 2 approves) #White
        DEV_GIT_PULL_REQUEST(gitPRMain, Pull Request\nRequire 1 approves) #White
    }
}

package "外部データベース" as ext <<Database>> {
    DEV_MYSQL(db3,Mysql,database)
}

Client(clientUser, User, User client device){
    FA5_SLACK(slack, Slack) #white {
    }

    rectangle Backlog {
        () "Taska" #gray
        () "WIKI" #gray
    }

    rectangle 設計書作成ツール {
        frame URL設計 #White {
            () "GoogleSheets" #gray
        }
        frame CRUD表 #White {
            () "GoogleSheets" #gray
        }
        frame 画面設計ワイヤーフレーム #White {
            () "Figma" #gray
        }
        frame DB設計ER図 #White {
            () "dbdiagram.io" #gray
            () "PlantUML" #gray
        }
        frame システム構成図 #White {
            () "PlantUML" #gray
            () "https://www.wakuwakubank.com/posts/850-design-uml-layout-map/" #gray
        }
        frame シーケンス図 #White {
            () "PlantUML" #gray
        }
        frame Other #White {
            () "その他テンプレート/https://notepm.jp/template" #gray
        }
    }

    rectangle 開発ツール {
        () "Tableplus" #gray
        () "Vscode" #gray
        () "Postman" #gray
        () "Docker" #gray
    }
}

' down, upのみだとマウスホイールダウンだけで確認できるので楽
' upを使わないといけない場合はdownで表現できないか考える
URL設計 -down- CRUD表
URL設計 -down- 画面設計ワイヤーフレーム
URL設計 -down- DB設計ER図
URL設計 -down- システム構成図

clientUser 0--down---> gitBranchFeature : Push
github -down- db3
github -down- aws

@enduml